#Pregunta 3: al ordenar el df por longitud del avistamiento, vemos que el más largo se produjo en
forma <- table(df$shape)
prop.table(forma)
prop.table(forma)*100
#Pregunta 1: observamos que el estado con más casos es California (13615)
df$state <-factor(df$state)
table(df$state)
table(df$state, SORT = TRUE)
#Pregunta 3: en términos porcentuales, las formas más reportadas son las luces (20.58%), los triángulos (9.18%) y las "bolas de fuego" (7.19%). Las menos frecuentes son hexagonales, llamaradas, pirámides, media luna y de forma cambiante (representan un 0.0009% respectivamente)
df$shape <-factor(df$shape)
prop.table(forma)*100
str_sub(x, 1,4)
str_sub(anio, 1,4)
str_sub(df$date, 1,4)
df <- mutate(anio,
str_sub(df$date, 1,4))
df <- mutate(c = anio,
str_sub(df$date, 1,4))
df <- mutate(c = "anio",
str_sub(df$date, 1,4))
df <- mutate(df, anio =
str_sub(df$date, 1,4))
view(df)
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
view(df)
table(df$horario)
df <- mutate(franja_horario = case_when(horario >= 7 & franja_horaria <= 18 ~ 'Diurno',
franja_horaria >= 19 & franja_horaria <= 6 ~ 'Nocturno'))
df <- mutate(franja_horario = case_when(horario >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
df <- mutate(df, franja_horario = case_when(horario >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
view(df)
df <- mutate(df, franja_horario = case_when(horario >= 07 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 06 ~ 'Nocturno'))
view(df)
install.packages(forcats)
install.packages("forcats")
install.packages("forcats")
library(forcats)
df$horario <- fct_recode(df$horario, "01" = "1", "02" = "2", "03" = "3", "04" = "4", "05" = "5", "06" = "6", "07" = "7", "08" = "8", "09" = "9")
factor(df$horario)
df$horario <- fct_recode(df$horario, "01" = "1", "02" = "2", "03" = "3", "04" = "4", "05" = "5", "06" = "6", "07" = "7", "08" = "8", "09" = "9")
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7" = "07", "8" = "08", "9" = "09")
df <- mutate(df, franja_horario = case_when(horario >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
view(df)
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
number(df$horario)
df$horario <- fct_recode(df$horario, 1 = "01", 2 = "02", 3 = "03", 4 = "04", 5 = "05", 6 = "06", 7 = "07", 8 = "08", 9 = "09")
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
df <- mutate(df, franja_horario = case_when(horario >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
view(df)
table(df$franja_horario)
df <- mutate(df, franja_horario = case_when(horario  = 07,08,09,10,11,12,13,14,15,15,17.18 ~ 'Diurno',
horario = 19,20,21,22,23,00,01,02,03,04,05,06 ~ 'Nocturno'))
view(df)
as.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <=18 ~ 'Diurno',
horario => 19 & horario <=6 ~ 'Nocturno'))
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <=18 ~ 'Diurno',
horario >= 19 & horario <=6 ~ 'Nocturno'))
view(df)
df <- mutate(df, franja_horario = case_when(horario  >= 07 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 06 ~ 'Nocturno'))
view(df)
df$horario <- fct_recode(df$horario, "1" = "01")
as.numeric(df$horario)
view(df)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06")
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06")
as.factor(df$horario)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06")
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09")
as.factor(df$horario)
as.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 07 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 06 ~ 'Nocturno'))
as.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 07 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 06 ~ 'Nocturno'))
view(df)
as.numeric(df$horario)
view(df)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09")
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
as.factor(df$horario)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09")
as.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 07 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 06 ~ 'Nocturno'))
as.numeric(df$horario)
is.numeric(df$horario)
as.numeric(df$horario)
is.numeric(df$horario)
as.numeric(df$horario)
is.numeric(df$horario)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
as.numeric(df$horario)
is.numeric(df$horario)
as.factor(df$horario)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
as.numeric(df$horario)
is.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
df$horario2 <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
as.numeric(df$horario2)
is.numeric(df$horario2)
df$horario <- fct_recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
df$horario <- recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
as.numeric(df$horario)
is.numeric(df$horario)
as.numeric(df$horario)
is.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario <= 6 ~ 'Nocturno'))
view(df)
is.numeric(df$horario2)
as.numeric(df$horario2)
is.numeric(df$horario2)
df$horario <- recode(df$horario, 1 = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
df$horario <- recode(df$horario, "1" = "01", "2" = "02", "3" = "03", "4" = "04", "5" = "05", "6" = "06", "7"= "07", "8" = "08", "9" = "09", "0" = "00")
remove(df$horario2)
as.numeric(df$horario)
is.numeric(df$horario)
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
as.numeric(df$horario)
is.numeric(df$horario)
is.numeric(df$horario2)
as.numeric(df$horario2)
is.numeric(df$horario2)
remove(df$horario2)
view(df)
df <- mutate(df, franja_horario = case_when(horario2  >= 7 & horario2 <= 18 ~ 'Diurno',
horario2 >= 19 & horario2 <= 6 ~ 'Nocturno'))
df <- mutate(df, horario =
str_sub(df$date_time, 12,13)) %>% as.numeric(df$horario)
str_sub(df$date_time, 12,13)
as.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario2 <= 6 ~ 'Nocturno'))
as.numeric(df$horario)
is.numeric(df$horario)
str_sub(df$date_time, 12,13,)
str_sub(df$date_time, 12,13)
as.numeric(df$horario)
is.numeric(df$horario)
as.numeric(df$horario),
is.numeric(df$horario),
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario2 <= 6 ~ 'Nocturno'))
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
as.numeric(df$horario)
is.numeric(df$horario)
df <- mutate(df, franja_horario = case_when(horario  >= 7 & horario <= 18 ~ 'Diurno',
horario >= 19 & horario2 <= 6 ~ 'Nocturno'))
is.factor(df$horario)
is.string(df$horario)
is.factor(df$horario)
is.numeric(df$horario)
is.character(df$horario)
as.Date.numeric(df$horario)
is.character(df$horario)
df <- mutate(df, horario =
str_sub(df$date_time, 12,13))
is.character(df$horario)
as.numeric(df$horario)
df <- mutate(df, horario2 = as.numeric(df$horario))
is.numeric(df$horario2)
df <- mutate(df, franja_horario = case_when(horario2  >= 7 & horario2 <= 18 ~ 'Diurno',
horario2 >= 19 & horario2 <= 6 ~ 'Nocturno'))
view(df)
df <- mutate(df, franja_horario = case_when(horario2  >= 7 & horario2 <= 18 ~ 'Diurno',
horario2 = 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6 ~ 'Nocturno'))
df <- mutate(df, franja_horario = case_when(horario2  >= 7 & horario2 <= 18 ~ 'Diurno',
horario2 >= 19 | horario2 <=6 ~ 'Nocturno'))
view(df)
table(df$franja_horario)
str_sub(df$date_time, 1,4)) %>% mutate(df, anio, as.numeric(df$anio) %>% filter(df$anio > 2002)
str_sub(df$date_time, 1,4) %>% mutate(df, anio, as.numeric(df$anio) %>% filter(df$anio > 2002))
str_sub(df$date_time, 1,4) %>% mutate(df, anio2, as.numeric(df$anio) %>% filter(df$anio2 > 2002))
view(df)
as.numeric(df$anio)
view(df)
df <- nuforc_reports %>% select(summary, city, state, date_time, shape, duration, city_latitude, city_longitude) %>% drop_na() %>% rename(lat=city_latitude, long=city_longitude)%>% df <- mutate(df, anio =
str_sub(df$date_time, 1,4)
as.numeric(df$anio)
df <- filter(df$anio > 2002))
df <- filter(df$anio > 2002)
df <- filter(df$anio >= 2002)
df <- mutate(df, anio2 = as.numeric(df$anio))
view(df)
df <- filter(df$anio >= 2002)
is.numeric(df$anio2)
df <- filter(df$anio2 >= 2002)
df <- filter(df, anio2 >= 2002)
table(df$state)
sort(df$state, decreasing = TRUE)
prop.table(forma)*100
table(df$franja_horario)
ggplot(df) + geom_point(aes(x = shape, y = anio2, color = factor(shape)))
pregunta_4 <- ggplot(df) + geom_point(aes(x = shape, y = anio2, color = factor(shape)))
df <- mutate(df, general_shape = recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "teardrop", "tringle" = "cone", "lights" = "fireball", "lights" = "flash", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation"))
view(df)
df <- mutate(df, general_shape = fct_recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "teardrop", "tringle" = "cone", "lights" = "fireball", "lights" = "flash", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation"))
view(df)
forma_general <- table(df$general_shape)
prop.table(forma_general)*100
df <- mutate(df, general_shape = fct_recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "tringle", "triangle" = "teardrop", "tringle" = "cone", "triangle" = "pyramids", "lights" = "fireball", "lights" = "flash", "lights" = "flare", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation", "others" = "changed", "others" = "crescent", "others" = "delta", "others" = "hexagon", "other" = "others"))
df <- mutate(df, general_shape = fct_recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "tringle", "triangle" = "teardrop", "tringle" = "cone", "triangle" = "pyramid", "lights" = "fireball", "lights" = "flash", "lights" = "flare", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation", "others" = "changed", "others" = "crescent", "others" = "delta", "others" = "hexagon", "others" = "other"))
df <- mutate(df, general_shape = fct_recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "teardrop", "tringle" = "cone", "triangle" = "pyramid", "lights" = "fireball", "lights" = "flash", "lights" = "flare", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation", "others" = "changed", "others" = "crescent", "others" = "delta", "others" = "hexagon", "others" = "other"))
forma_general <- table(df$general_shape)
prop.table(forma_general)*100
df <- mutate(df, general_shape = fct_recode(df$shape, "round" = "circle", "round" = "disk", "round" = "egg", "round" = "oval", "round" = "sphere", "square" = "diamond", "square" = "rectangle", "square" = "cross", "triangle" = "chevron", "triangle" = "triangle", "triangle" = "teardrop", "triangle" = "cone", "triangle" = "pyramid", "lights" = "fireball", "lights" = "flash", "lights" = "flare", "lights" = "light", "others" = "changing", "others" = "unknown", "others" = "cigar", "others" = "cylinder", "others" = "formation", "others" = "changed", "others" = "crescent", "others" = "delta", "others" = "hexagon", "others" = "other"))
forma_general <- table(df$general_shape)
prop.table(forma_general)*100
pregunta_4 <- ggplot(df) + geom_point(aes(x = general_shape, y = anio2, color = factor(general_shape)))
pregunta_4 <- ggplot(df) + geom_point(aes(x = general_shape, y = anio2, color = factor(general_shape)))
pregunta_4 <- ggplot(df) + geom_point(aes(x = anio2, color = factor(general_shape)))
View(pregunta_4)
View(pregunta_4)
df_shape <- df %>% group_by(general_shape)
view(df_shape)
remove(df_shape)
pregunta_4 <- ggplot(df) +
geom_histogram(aes(x = general_shape)) +
facet_wrap(~anio2)
View(pregunta_4)
View(pregunta_4)
pregunta_4b <- ggplot(df) +
geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() +
labs(title = "Forma de OVNIs reportados por año",
caption = "Fuente: nuforc reports",
x = "Anio",
y = "Cantidad total de reportes",
fill = "Forma del objeto reportado")
View(pregunta_4b)
View(pregunta_4)
View(pregunta_4)
pregunta_4 <- ggplot2(df) +
geom_histogram(aes(x = general_shape)) +
facet_wrap(~anio2)
pregunta_4 <- ggplot(df) +
geom_histogram(aes(x = general_shape)) +
facet_wrap(~anio2)
pregunta_4 <- ggplot(df) +
geom_histogram(aes(x = general_shape)) +
facet_wrap(~anio2),
pregunta_4b <- ggplot2(df) +
geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() +
labs(title = "Forma de OVNIs reportados por año",
caption = "Fuente: nuforc reports",
x = "Anio",
y = "Cantidad total de reportes",
fill = "Forma del objeto reportado")
pregunta_4 <- ggplot(df) +
geom_histogram(aes(x = general_shape)) +
facet_wrap(~anio2),
pregunta_4b <- ggplot(df) +
geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() +
labs(title = "Forma de OVNIs reportados por año",
caption = "Fuente: nuforc reports",
x = "Anio",
y = "Cantidad total de reportes",
fill = "Forma del objeto reportado")
View(pregunta_4)
pregunta_4b <- ggplot(df) +
geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() +
labs(title = "Forma de OVNIs reportados por año",
caption = "Fuente: nuforc reports",
x = "Anio",
y = "Cantidad total de reportes",
fill = "Forma del objeto reportado")
frequency(df, date_time)
pregunta_4b <- ggplot(df) + geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
library(ggplot)
library(ggplot2)
pregunta_4 <- ggplot(df) + geom_histogram(aes(x = general_shape)) + facet_wrap(~anio2)
View(pregunta_4)
pregunta_4b <- ggplot(df) + geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df) + geom_bar(aes(x = anio2, weight = total, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df) + geom_bar(aes(x = anio2, weight = count, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df) + geom_histogram(aes(x = general_shape)) + facet_wrap(~anio2)
ggplot(df) + geom_histogram(aes(x = general_shape, stat=count)) + facet_wrap(~anio2)
ggplot(df) + geom_histogram(aes(x = general_shape, stat="count")) + facet_wrap(~anio2)
ggplot(df) + geom_histogram(aes(x = general_shape)) + facet_wrap(~anio2)
df2 <- df %>% group_by(general_shape)
View(df2)
df2 <- df %>% group_by(general_shape) %>% count(df, general_shape)
df2 <- df %>% group_by(general_shape) %>% count(general_shape)
df2 <- df %>% group_by(general_shape, year) %>% count(general_shape, year)
df2 <- df %>% group_by(general_shape, anio2) %>% count(general_shape, anio2)
ggplot(df2) + geom_histogram(aes(x = n)) + facet_wrap(~anio2)
ggplot(df) + geom_bar(aes(x = anio2, weight = n, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
df2 <- df %>% group_by(general_shape, anio2) %>% count(general_shape, anio2) %>% drop_na()
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape)) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape, label = factor(general_shape))) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
View(pregunta_4)
remove(pregunta_4)
remove(pregunta_4b)
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
#Pregunta 7:
df3 <- df %>% group_by(anio2) %>% count(anio2)
view(df3)
ggplot(df2)(aes(x=anio2, y=n)) +
geom_line( color="grey") +
geom_point(shape=21, color= factor(general_shape), fill="#69b3a2", size=6) +
ggtitle("Formas reportadas")
ggplot(df2)+ geom_point(aes(x=anio2, y=n)) +
geom_line( color="grey") +
geom_point(shape=21, color= factor(general_shape), fill="#69b3a2", size=6) +
ggtitle("Formas reportadas")
ggplot(df2)+ geom_point(aes(x=anio2, y=n)) +
geom_line( color="grey") +
geom_point(shape=21, color= "blue", fill="#69b3a2", size=6) +
ggtitle("Formas reportadas")
ggplot(df2)+ geom_lines(aes(x=anio2, y=n)) +
geom_line( color="grey") +
geom_point(shape=21, color= "blue", fill="#69b3a2", size=6) +
ggtitle("Formas reportadas")
ggplot(df2)+ geom_line(aes(x=anio2, y=n)) +
geom_line( color="grey") +
geom_point(shape=21, color= "blue", fill="#69b3a2", size=6) +
ggtitle("Formas reportadas")
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
plot1 <- ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) +
coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
plot1 <- ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) + coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
+ coord_flip() +
labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
plot1 <- ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) + coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y= "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) + coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y= "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) + coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df3) + geom_point(aes(x = anio2, y = n, color = "blue"))
ggplot(df3) + geom_point(aes(x = anio2, y = n, color = "blue"))
ggplot(df3) + geom_point(aes(x = anio2, y = n))
ggplot(df2) + geom_bar(aes(x = anio2, weight = n, fill = general_shape) + coord_flip() + labs(title = "Forma de OVNIs reportados por año", caption = "Fuente: nuforc reports", x = "Anio", y = "Cantidad total de reportes", fill = "Forma del objeto reportado")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + labs(title = "Cantidad de avistamientos por año", caption = "Fuente: nuforc reports", x = "cantidad de reportes", y = "anio")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + labs(title = "Cantidad de avistamientos por año", caption = "Fuente: nuforc reports", x = "cantidad de reportes", y = "anio")
arrange(df3, desc(n))
regresion <- lm(n ~ anio2, data = df3)
View(regresion)
regresion
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + labs(title = "Cantidad de avistamientos por año", caption = "Fuente: nuforc reports", x = "cantidad de reportes", y = "anio")+ geom_abline(aes(intercept = -182247.82, slope =  92.84), color = "blue")
residuos <- residuals(regresion)
residuos
df4 <- df3 %>% mutate(residuos = residuos)
residuos
View(regresion)
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + geom_vline(aes(xintercept = 2012, 2020), color = "red") + labs(title = "Cantidad de avistamientos por año", y = "año",caption = "En rojo, los años 2012 y 2020, caracterizados por contextos favorables a teorías conspirativas y escenarios apocalípticos")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + geom_vline(aes(xintercept = 2012 & 2020), color = "red") + labs(title = "Cantidad de avistamientos por año", y = "año",caption = "En rojo, los años 2012 y 2020, caracterizados por contextos favorables a teorías conspirativas y escenarios apocalípticos")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + geom_vline(aes(xintercept = 2012, 2020), color = "red") + labs(title = "Cantidad de avistamientos por año", y = "año",caption = "En rojo, los años 2012 y 2020, caracterizados por contextos favorables a teorías conspirativas y escenarios apocalípticos")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + geom_vline(aes(xintercept = 2012), color = "red") + geom_vline(aes(xintercept = 2020), color = "red") + labs(title = "Cantidad de avistamientos por año", y = "año",caption = "En rojo, los años 2012 y 2020, caracterizados por contextos favorables a teorías conspirativas y escenarios apocalípticos")
ggplot(df3) + geom_point(aes(x = anio2, y = n)) + geom_vline(aes(xintercept = 2012), color = "red") + geom_vline(aes(xintercept = 2020), color = "red") + labs(title = "Cantidad de avistamientos por año", y = "cantidad de reportes", caption = "En rojo, los años 2012 y 2020, caracterizados por contextos favorables a teorías conspirativas y escenarios apocalípticos")
install.packages("usmap")
library(usmap)
plot_usmap(regions = "states") +
labs(title = "U.S. States")
View(df)
plot_usmap (regions = "states") + geom_point(data = df, aes(x = lat, y = long, size = 3),
color = "red") +
labs(title = "U.S. States")
labs(title = "U.S. States")
labs(title = "U.S. States")
plot_usmap (regions = "states") + geom_point(data = df, aes(x = lat, y = long, size = 3, color = "red")
plot_usmap (regions = "states") + ggplot(aes(geom_point(data = df, aes(x = lat, y = long, size = 3, color = "red")))
plot_usmap (regions = "states") + ggplot(df) + geom_point(aes(data = df, x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + ggplot + geom_point(aes(data = df, x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + ggplot() + geom_point(aes(data = df, x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + geom_point(aes(data = df, x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = lat, y = long, size = 3, color = "red"))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = long, y = lat, size = 1))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = long, y = lat))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = long, y = lat, group = group))
plot_usmap (regions = "states") + geom_point(data = df, aes(x = long, y = lat))
plot_usmap (regions = "states") + geom_polygon(data = df, aes(x = long, y = lat))
coord <- st_as_sf(df, coords = c("long", "lat"),  crs = 4326)
install.packages("mapview")
library(mapview)
install.packages("sf")
library(sf)
coord <- st_as_sf(df, coords = c("long", "lat"),  crs = 4326)
install.packages("sf")
mapview(coord, map.types = "Stamen.Toner")
plot_usmap (regions = "states") + geom_polygon(data = df, aes(x = long, y = lat))
plot_usmap (regions = "states") + geom_polygon(data = coord, aes(x = long, y = lat))
plot_usmap (regions = "states") + geom_polygon(data = coord, aes(x = long, y = lat))
View(coord)
mapview(coord)
remove(coord)
df4 <- df %>% group_by(state) %>% count(state)
view(df4)
plot_usmap(data = df4, values = "n", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos", label = scales::comma
) + theme(legend.position = "right")
plot_usmap(regions = "states", data = df4, values = "n", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos", label = scales::comma
) + theme(legend.position = "right")
plot_usmap(regions = "state", data = df4, values = "n", color = "red") +
scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos", label = scales::comma
) + theme(legend.position = "right")
plot_usmap(regions = "state", data = df4, values = "n") +
scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(regions = "state")
plot_usmap(regions = "state", data = df4, values = "n")
plot_usmap(data = df4, values = "n")
df4 <- df %>% group_by(state) %>% count(state) %>% rename(state = "fips", n = "value")
df4 <- df %>% group_by(state) %>% count(state) %>% rename("fips" = state, "value" = n)
view(df4)
plot_usmap(data = df4)
df4 <- df %>% group_by(state) %>% count(state) %>% rename("fips" = state, "values" = n)
plot_usmap(data = df4)+ scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4, color = "red")+ scale_fill_continuous(
low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4, color = "black")+ scale_fill_continuous(low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4)+ scale_fill_continuous(low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4)+ scale_fill_continuous(low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values")+ scale_fill_continuous(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_continuous(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_binned(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_discrete(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "white", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
df4 <- df %>% group_by(state) %>% count(state) %>% rename("state" = state, "values" = n)
view(df4)
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
df4 <- df %>% group_by(state) %>% count(state) %>% rename("fips" = state, "values" = n)
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
df4 <- df %>% group_by(state) %>% count(state) %>% rename("state" = state, "values" = n)
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
as.character(df4$state)
is.character(df4$state)
df4 <- mutate(df4, state = as.character(df4$state))
df4 <- df %>% group_by(state) %>% count(state) %>% rename("states" = state, "values" = n)
df4 <- mutate(df4, state = as.character(df4$states))
is.character(df4$state)
is.character(df4$states)
df4 <- mutate(df4, state = as.character(df4$states))
is.character(df4$state)
df4 <- df %>% group_by(state) %>% count(state) %>% rename("states" = state, "values" = n)
view(df4)
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
df4 <- mutate(df4, state = as.character(df4$states))
df4 <- mutate(df4, states = as.character(df4$states))
df4 <- mutate(df4, states = as.factor(df4$states))
df5 <- mutate(df4, state = as.character(df4$states))
df4 <- df %>% group_by(state) %>% count(state) %>% rename("values" = n)
view(df4)
df4 <- mutate(df4, state = as.character(df4$state))
df4 <- df %>% group_by(state) %>% count(state) %>% rename("values" = n) %>% ungroup()
view(df4)
df4 <- mutate(df4, state = as.character(df4$state))
is.character(df4$state)
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(regions = "state", data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(regions = "states", data = df4, values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, regions = "state", values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, regions = "states", values = "values") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4) + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
view(df4)
is.character(df4$state)
plot_usmap(data = df4) + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
is.numeric(df4$values)
plot_usmap(data = df4) + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, include = c("CA", "ID", "NV", "OR", "WA") + scale_fill_gradient(low = "red", high = "blue", name = "Cantidad de avistamientos")
plot_usmap(data = df4, include = c("CA", "ID", "NV", "OR", "WA") + scale_fill_gradient(low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4, include = c("CA", "ID", "NV", "OR", "WA")) + scale_fill_gradient(low = "white", high = "red", name = "Cantidad de avistamientos")
plot_usmap(data = df4, values = "values") + scale_fill_gradient(low = "white", high = "red", name = "Cantidad de avistamientos")
mapa <- st_read(https://github.com/scdoshi/us-geojson/tree/master/geojson/state)
mapa <- st_read("https://github.com/scdoshi/us-geojson/tree/master/geojson/state")
summary(mapa)
mapa <- st_read("https://github.com/scdoshi/us-geojson/blob/master/geojson/nation/US.geojson")
mapa <- st_read("C:/Users/ivani/Downloads/gz_2010_us_040_00_500k.json")
summary(mapa)
ggplot() + geom_sf(data = mapa)
View(mapa)
